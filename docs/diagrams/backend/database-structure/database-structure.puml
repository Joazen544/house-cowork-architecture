@startuml database-structure

entity User {
  *id: number <<generated>>
  *email: string
  *password: string
  *name: string
  nickName: string
  avatar: string
}

entity Task {
  *id: number <<generated>>
  *ownerId: number <<FK(User.id)>>
  *title: string
  *description: string
  *accessLevel: int <<enum TaskAccessLevel>>
  *status: int <<enum TaskStatus>>
  *dueTime: datetime
  *houseId: number <<FK(House.id)>>
}

enum TaskAccessLevel {
  ALL = 0
  ASSIGNEE = 1
}

enum TaskStatus {
  OPEN = 0
  IN_PROGRESS = 1
  DONE = 2
  CANCELLED = 3
  REJECTED = 4
}

Task -- TaskAccessLevel : uses
Task -- TaskStatus : uses

entity TaskAssignment {
  *id: number <<generated>>
  *taskId: number <<FK(Task.id)>>
  *userId: number <<FK(User.id)>>
  @assigneeStatus: number <<enum TaskAssignmentStatus>>
}

enum TaskAssignmentStatus {
  PENDING = 0
  ACCEPTED = 1
  REJECTED = 2
  CANCELLED = 3
  DONE = 4
}

TaskAssignment -- TaskAssignmentStatus : uses

entity House {
  *id: number <<generated>>
  *name: string
  description: string
}

entity HouseUser {
  *id: number <<generated>>
  *userId: number <<FK(User.id)>>
  *houseId: number <<FK(House.id)>>
  *status: number <<enum HouseUserStatus>>
}

enum HouseUserStatus {
  JOINED = 0
  LEFT = 1
}

HouseUser -- HouseUserStatus : uses

entity Rule {
  *id: number <<generated>>
  *houseId: number <<FK(House.id)>>
  *name: string
  description: string
}

entity JoinRequest {
  *id: number <<generated>>
  *houseId: number <<FK(House.id)>>
  *userId: number <<FK(User.id)>>
  *status: number <<enum JoinRequestStatus>>
}

enum JoinRequestStatus {
  PENDING = 0
  ACCEPTED = 1
  REJECTED = 2
  CANCELLED = 3
}

JoinRequest -- JoinRequestStatus : uses

entity Invitation {
  *id: number <<generated>>
  *invitation_code:
  *houseId: number <<FK(House.id)>>
  *expiresAt: datetime
}

entity DeviceToken {
  *id: number <<generated>>
  *token: string
  *device: string
  *userId: number <<FK(User.id)>>
  *isActive: boolean
}

User ||--o{ Task : owns
User ||--o{ TaskAssignment : assignee
Task ||--o{ TaskAssignment : assignedTasks
User ||--o{ HouseUser :users
House ||--o{ HouseUser :houses

House ||--o{ Rule : has
House ||--o{ Task : has
House ||--o{ JoinRequest : has
JoinRequest ||--|| User : belongs
House ||--o{ Invitation : has

@enduml
